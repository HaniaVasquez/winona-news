import type { Document } from '@contentful/rich-text-types'export interface ContentfulSys {  id: string  type?: string  createdAt?: string  updatedAt?: string  [key: string]: any}export interface ContentfulAsset {  sys: ContentfulSys  fields: {    title?: string    description?: string    file?: {      url?: string      details?: any      fileName?: string      contentType?: string    }    [key: string]: any  }}export interface ContentfulEntry<T = any> {  sys: ContentfulSys  fields: T}export interface ContentfulIncludes {  Asset?: ContentfulAsset[]  Entry?: ContentfulEntry[]  [key: string]: any}export interface ContentfulResponse<T = any> {  sys?: any  total?: number  skip?: number  limit?: number  items: ContentfulEntry<T>[]  includes?: ContentfulIncludes}export interface ContentfulRawPostFields {  title: string  slug: string  description?: string  publishedDate: string  excerpt:  string  shortDescription: string  featuredImage?: { sys: { id: string } } | { fields: { file: { url: string }; title?: string } }  author?: { sys: { id: string } } | { fields?: any }  relatedBlogPosts?: Array<{ sys: { id: string } }> | Array<any>  content?: Document}export interface ContentfulRawPost {  sys: ContentfulSys  contentTypeId?: string  fields: ContentfulRawPostFields}export interface ContentfulPostAuthor {  id: string  name?: string  slug?: string  avatar?: string | null}export interface ContentfulPostSummary {  id: string  title?: string  slug?: string  description?: string  image?: string | null  date?: string}export interface ContentfulPost {  id: string  title: string  slug: string  description?: string  type?: string  image?: string  date: string  content?: string  contentHtml?: string | Document  contentRaw?: Document | null  author?: ContentfulPostAuthor | null  related?: ContentfulPostSummary[]}