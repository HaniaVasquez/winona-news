import { createClient } from 'contentful'import type { EntryCollection } from 'contentful'export function makeContentfulClient(preview = false) {  const config = useRuntimeConfig()  const accessToken = preview ? config.CONTENTFUL_PREVIEW_TOKEN : config.CONTENTFUL_DELIVERY_TOKEN  return createClient({    space: config.CONTENTFUL_SPACE_ID!,    accessToken,    environment: config.CONTENTFUL_ENVIRONMENT || 'master',    host: preview ? 'preview.contentful.com' : 'cdn.contentful.com',  })}export async function fetchBlogPosts() {  const client = makeContentfulClient()  const entries: EntryCollection<any> = await client.getEntries({    content_type: 'pageBlogPost',    order: ['-fields.publishedDate'],  })  const normalizeImage = (maybe: any): string | null => {    if (!maybe) return null    if (maybe.fields?.file?.url) {      const raw = maybe.fields.file.url as string      return raw.startsWith('//') ? `https:${raw}` : raw    }    return null  }  return entries.items.map((item: any) => ({    id: item.sys.id,    title: item.fields.title,    slug: item.fields.slug,    description:      item?.fields?.description ?? item?.fields?.excerpt ?? item?.fields?.shortDescription ?? '',    image:      normalizeImage(item.fields.articleImage) ||      normalizeImage(item.fields.featuredImage) ||      normalizeImage(item.fields.image),    date: item.fields.publishedDate,  }))}